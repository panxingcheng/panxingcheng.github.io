import{_ as i,c as a,o as n,ag as h}from"./chunks/framework.BPIbAgMo.js";const F=JSON.parse('{"title":"了解 ASP.NET Core 基础知识","description":"","frontmatter":{"title":"了解 ASP.NET Core 基础知识","permalink":"1741795199.html","sidebar":"auto","blogs":".NET","date":"2025-04-12"},"headers":[],"relativePath":"category/dotnet/了解 ASP-NET Core 基础知识.md","filePath":"category/dotnet/了解 ASP-NET Core 基础知识.md","lastUpdated":1747149659000}'),t={name:"category/dotnet/了解 ASP-NET Core 基础知识.md"};function l(k,s,p,e,d,E){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="了解-asp-net-core-基础知识" tabindex="-1">了解 ASP.NET Core 基础知识 <a class="header-anchor" href="#了解-asp-net-core-基础知识" aria-label="Permalink to &quot;了解 ASP.NET Core 基础知识&quot;">​</a></h1><h2 id="asp-net-core-项目模板" tabindex="-1">ASP.NET Core 项目模板 <a class="header-anchor" href="#asp-net-core-项目模板" aria-label="Permalink to &quot;ASP.NET Core 项目模板&quot;">​</a></h2><p>.NET SDK 包括用于创建 ASP.NET Core 项目和文件的内置模板。 ASP.NET Core 项目模板用于使用必要的文件、文件夹和配置来创建新的 ASP.NET Core 项目，以便高效地搭建并运行项目。</p><p>安装 .NET SDK 后，可以在终端或命令提示符中运行 .NET CLI （命令行接口）命令。 若要列出内置模板，请运行 <code>dotnet new list</code> 命令：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">这些模板已匹配你的输入:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">模板名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                   短名称</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                      语言</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        标记</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---------------------------------------</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --------------------------</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  ----------</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --------------------------</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">API</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 控制器</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                               apicontroller</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               [C#]        Web/ASP.NET</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ASP.NET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gRPC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 服务</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                   grpc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        [C#]        Web/gRPC/API/Service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ASP.NET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Web</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> API</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                     webapi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      [C#],F#     Web/Web API/API/Service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ASP.NET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Web</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> API</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (native </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">AOT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)        webapiaot                   [C#]        Web/Web API/API/Service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ASP.NET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Web</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 应用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    webapp,razor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                [C#]        Web/MVC/Razor Pages</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ASP.NET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Web</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 应用</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">模型-视图-控制器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mvc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         [C#],F#     Web/MVC</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ASP.NET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 空</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                          web</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         [C#],F#     Web/Empty</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Blazor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Web</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 应用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                          blazor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      [C#]        Web/Blazor/WebAssembly</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Blazor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WebAssembly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 应用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                  blazorwasm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                  [C#]        Web/Blazor/WebAssembly/PWA</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gitignore</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    gitignore,.gitignore</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    Config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 本地工具清单文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                  tool-manifest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                           Config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EditorConfig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        editorconfig,.editorconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">              Config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">global.json</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                         globaljson,global.json</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                  Config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MSBuild</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Directory.Build.props</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       buildprops</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              MSBuild/props</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MSBuild</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Directory.Build.targets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     buildtargets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            MSBuild/props</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MSTest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           mstest-playwright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           [C#]        Test/MSTest/Playwright</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MSTest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                      mstest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      [C#],F#,VB  Test/MSTest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MVC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ViewImports</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                          viewimports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 [C#]        Web/ASP.NET</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MVC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ViewStart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            viewstart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                   [C#]        Web/ASP.NET</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MVC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 控制器</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                               mvccontroller</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               [C#]        Web/ASP.NET</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NuGet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 配置</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                               nugetconfig,nuget.config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                Config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NUnit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        nunit-test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                  [C#],F#,VB  Test/NUnit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NUnit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                     nunit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                       [C#],F#,VB  Test/NUnit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NUnit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            nunit-playwright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            [C#]        Test/NUnit/Playwright</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Razor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 类库</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                               razorclasslib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               [C#]        Web/Razor/Library</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Razor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 组件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                               razorcomponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              [C#]        Web/ASP.NET</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Razor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 视图</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                               view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        [C#]        Web/ASP.NET</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Razor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 页面</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                               page</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        [C#]        Web/ASP.NET</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Web</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 配置</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                 webconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                               Config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Windows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 窗体应用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                         winforms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    [C#],VB     Common/WinForms</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Windows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 窗体控件库</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       winformscontrollib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          [C#],VB     Common/WinForms</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Windows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 窗体类库</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                         winformslib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 [C#],VB     Common/WinForms</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WPF</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 应用程序</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             wpf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         [C#],VB     Common/WPF</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WPF</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 用户控件库</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                           wpfusercontrollib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           [C#],VB     Common/WPF</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WPF</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 类库</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                 wpflib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      [C#],VB     Common/WPF</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WPF</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 自定义控件库</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                         wpfcustomcontrollib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         [C#],VB     Common/WPF</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xUnit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       xunit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                       [C#],F#,VB  Test/xUnit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">协议缓冲区文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                           proto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                   Web/gRPC</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">控制台应用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                               console</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                     [C#],F#,VB  Common/Console</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">类库</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                     classlib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    [C#],F#,VB  Common/Library</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">解决方案文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             sln,solution</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            Solution</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">辅助角色服务</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             worker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      [C#],F#     Common/Worker/Web</span></span></code></pre></div><h3 id="项目模板自定义选项" tabindex="-1">项目模板自定义选项 <a class="header-anchor" href="#项目模板自定义选项" aria-label="Permalink to &quot;项目模板自定义选项&quot;">​</a></h3><p>所有 .NET 项目模板都提供自定义选项，以便根据特定需求定制生成的项目，并使用其他服务对其进行扩展。 例如，可以为数据库访问、身份验证、OpenAPI、缓存、日志记录等添加 Entity Framework Core，使应用程序能够有效地满足特定要求。</p><p>若要查看特定模板的所有自定义选项，请使用以下 <code>dotnet new</code> 命令及 <code>--help</code> 选项，并将 <code>&lt;template-name&gt;</code> 替换为你要探索的模板的名称：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">template-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div><h3 id="使用-net-cli-dotnet-new-命令创建项目" tabindex="-1">使用 .NET CLI <code>dotnet new</code> 命令创建项目 <a class="header-anchor" href="#使用-net-cli-dotnet-new-命令创建项目" aria-label="Permalink to &quot;使用 .NET CLI \`dotnet new\` 命令创建项目&quot;">​</a></h3><p>可以使用 <code>dotnet new &lt;template-name&gt;</code> 命令创建新项目。 例如，若要创建新的空白 ASP.NET Core Web 应用项目，可以运行 <code>dotnet new web</code>。</p><p>创建新的 .NET 项目后，可以使用 <code>dotnet build</code> 和 <code>dotnet run</code> 命令生成并运行项目。</p><h2 id="构建你的第一个-asp-net-core-web-应用" tabindex="-1">构建你的第一个 ASP.NET Core Web 应用 <a class="header-anchor" href="#构建你的第一个-asp-net-core-web-应用" aria-label="Permalink to &quot;构建你的第一个 ASP.NET Core Web 应用&quot;">​</a></h2><h3 id="使用模板创建-asp-net-core-web-应用项目" tabindex="-1">使用模板创建 ASP.NET Core Web 应用项目 <a class="header-anchor" href="#使用模板创建-asp-net-core-web-应用项目" aria-label="Permalink to &quot;使用模板创建 ASP.NET Core Web 应用项目&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> web</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MyWebApp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">已成功创建模板“ASP.NET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 空”。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">正在处理创建后操作...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">正在还原</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">otnet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp.csproj:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  正在确定要还原的项目…</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  已还原</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">otnet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp.csproj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (用时 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">83</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 毫秒</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">已成功还原。</span></span></code></pre></div><h3 id="检查项目结构" tabindex="-1">检查项目结构 <a class="header-anchor" href="#检查项目结构" aria-label="Permalink to &quot;检查项目结构&quot;">​</a></h3><p>以下部分概述了空 ASP.NET Core 项目的主要项目文件夹和文件：</p><h4 id="mywebapp-csproj-项目文件" tabindex="-1"><code>MyWebApp.csproj</code> 项目文件 <a class="header-anchor" href="#mywebapp-csproj-项目文件" aria-label="Permalink to &quot;\`MyWebApp.csproj\` 项目文件&quot;">​</a></h4><p><code>.csproj</code> 项目文件用于：</p><p>配置生成项目的方式 指定面向哪个 .NET 版本 管理项目依赖项</p><h4 id="obj-文件夹" tabindex="-1"><code>obj</code> 文件夹 <a class="header-anchor" href="#obj-文件夹" aria-label="Permalink to &quot;\`obj\` 文件夹&quot;">​</a></h4><p><code>obj</code> 文件夹包含生成系统使用的中间文件，其中包括从源文件生成的已编译对象文件。 最终生成输出放置在生成过程中创建的 <code>bin</code> 文件夹中。</p><h4 id="properties-launchsettings-json-文件" tabindex="-1"><code>Properties/launchSettings.json</code> 文件 <a class="header-anchor" href="#properties-launchsettings-json-文件" aria-label="Permalink to &quot;\`Properties/launchSettings.json\` 文件&quot;">​</a></h4><p><code>Properties/launchSettings.json</code> 文件包含有关如何在开发过程中启动应用的配置数据。 这些设置包括 applicationUrl 属性，该属性指定应用使用的根 URL，例如 <a href="https://localhost" target="_blank" rel="noreferrer">https://localhost</a>:{port}，其中 {port} 是创建项目时分配的随机本地端口号。</p><p><code>launchSettings.json</code> 文件包含以下配置：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://json.schemastore.org/launchsettings.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;profiles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;http&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;commandName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Project&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;dotnetRunMessages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;launchBrowser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;applicationUrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:5024&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;environmentVariables&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;ASPNETCORE_ENVIRONMENT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Development&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;https&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;commandName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Project&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;dotnetRunMessages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;launchBrowser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;applicationUrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://localhost:7042;http://localhost:5024&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;environmentVariables&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;ASPNETCORE_ENVIRONMENT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Development&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="program-cs-文件" tabindex="-1"><code>Program.cs</code> 文件 <a class="header-anchor" href="#program-cs-文件" aria-label="Permalink to &quot;\`Program.cs\` 文件&quot;">​</a></h4><p><code>Program.cs</code> 文件用作 ASP.NET Core 应用的入口点，并具有多个关键用途，其中包括：</p><p>主机配置：配置主机，包括设置 Web 服务器。 服务注册：将服务添加到应用的功能，例如数据库上下文、记录和特定框架的专用服务。 中间件管道配置：将应用的请求处理管道定义为一系列中间件实例。 环境配置：为开发、过渡和生产环境设置特定于环境的设置。 在创建的新的空 ASP.NET Core 项目中，<code>Program.cs</code> 文件至少包含以下代码：</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebApplication.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CreateBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>此文件中的以下代码行创建具有预配置默认值的 <code>WebApplicationBuilder</code>，并生成应用：</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebApplication.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CreateBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p><code>app.MapGet()</code> 方法直接定义处理 HTTP GET 请求的终结点：</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p><code>app.MapGet(&quot;/&quot;)</code>：定义 HTTP GET 请求的路由。 / 指示此路由响应对应用根 URL 发出的请求。 例如 <code>http://localhost:{port}/</code>，其中 <code>{port}</code> 是项目创建时在 <code>Properties/launchSettings.json</code> 文件中分配的随机分配端口号。</p><p><code>() =&gt; &quot;Hello World!&quot;</code>：用作请求处理器的 Lambda 表达式。 向根 URL 发出 GET 请求时，将执行此 Lambda 表达式，并返回字符串“Hello World!”</p><h3 id="在本地运行-web-应用" tabindex="-1">在本地运行 Web 应用 <a class="header-anchor" href="#在本地运行-web-应用" aria-label="Permalink to &quot;在本地运行 Web 应用&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">正在生成...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[14]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> listening</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:5024</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[0]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Application</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> started.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Press</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ctrl+C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shut</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[0]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Hosting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Development</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[0]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Content</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">otnet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp</span></span></code></pre></div><h4 id="web-应用获得服务的方式" tabindex="-1">Web 应用获得服务的方式 <a class="header-anchor" href="#web-应用获得服务的方式" aria-label="Permalink to &quot;Web 应用获得服务的方式&quot;">​</a></h4><p>生成并运行应用时，将执行以下步骤：</p><ol><li>生成和配置：</li></ol><p>调用 MSBuild 以还原依赖项并编译项目。 MSBuild 处理 MyWebApp.csproj 项目文件并将源代码编译为程序集。 应用将读取配置设置，包括为默认启动配置文件（列出的第一个）在 launchSettings.json 中指定的配置设置。</p><ol start="2"><li>主机设置：</li></ol><p><code>Program.cs</code> 中的 <code>CreateHostBuilder</code> 方法将设置 Web 主机。 默认情况下，<code>WebHostBuilder</code> 将 Kestrel 配置为 Web 服务器。 Kestrel 是适用于 ASP.NET Core 的跨平台 Web 服务器，专为高性能而设计。 Kestrel 开始侦听已配置 URL 上的传入 HTTP 请求，包括 HTTPS（如果指定）。</p><ol start="3"><li>请求处理：</li></ol><p>收到请求后，Kestrel 将其转发到 ASP.NET Core 中间件管道。 中间件管道通过一系列中间件组件处理请求，这些组件可以处理身份验证、事件日志和路由等任务。 如果请求与定义的路由匹配，则执行相应的终结点。 在这种情况下，<code>app.MapGet(&quot;/&quot;, () =&gt; &quot;Hello World!&quot;)</code> 终结点处理对根 URL 的请求，并返回字符串 Hello World!。</p><ol start="4"><li>响应：</li></ol><p>响应（在本例中为字符串“Hello World!”）通过中间件管道发送回 Kestrel，然后 Kestrel 将其发送回客户端。</p><h4 id="使用-dotnet-watch-运行-web-应用" tabindex="-1">使用 <code>dotnet watch</code> 运行 Web 应用 <a class="header-anchor" href="#使用-dotnet-watch-运行-web-应用" aria-label="Permalink to &quot;使用 \`dotnet watch\` 运行 Web 应用&quot;">​</a></h4><p>使用 .NET CLI <code>dotnet watch</code> 命令增强开发工作流。 与命令 <code>dotnet run</code> 不同，每当对源文件进行更改时，<code>dotnet watch</code> 都会自动重新生成并重新运行应用程序。 此外，<code>dotnet watch</code> 还包含热重载功能，该功能会将更新直接注入正在运行的应用程序，而无需重启。 <code>dotnet watch</code> 使你能够更快地查看更改的结果、提高工作效果和效率。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 🔥</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Hot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enabled.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> For</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> supported</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> edits,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> see</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://aka.ms/dotnet/hot-reload.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  💡</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Press</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Ctrl + R&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 🔧</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Building...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  正在确定要还原的项目…</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  所有项目均是最新的，无法还原。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">otnet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ebug</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">et8.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp.dll</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 🚀</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Started</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[14]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> listening</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:5024</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[0]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Application</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> started.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Press</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ctrl+C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shut</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[0]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Hosting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Development</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[0]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Content</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">otnet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp</span></span></code></pre></div><h5 id="更改应用的代码并快速查看结果" tabindex="-1">更改应用的代码并快速查看结果 <a class="header-anchor" href="#更改应用的代码并快速查看结果" aria-label="Permalink to &quot;更改应用的代码并快速查看结果&quot;">​</a></h5><p>MyWebApp 应用程序仍在运行，浏览器仍显示 Hello World! 响应：</p><ol><li>在 Visual Studio Code 的“资源管理器”窗格中选择“Program.cs”。</li><li>更改 <code>app.MapGet</code> 方法，使其响应 &quot;Hello .NET Developer Community!&quot; 而不是 &quot;Hello World!&quot;。</li><li>保存对代码所做的更改。</li></ol><p>保存更改后，<code>dotnet watch</code> 将自动检测对 <code>Program.cs</code> 文件的修改。 然后，它将：</p><ul><li>热重载应用程序：在可能的情况下，<code>dotnet watch</code> 会将更改应用到正在运行的应用程序，而无需完全重新生成。</li><li>重新生成应用程序（如有必要）：如果无法热重载更改，<code>dotnet watch</code> 会自动重新生成应用程序以合并所做的更改。</li><li>重启应用程序（如有必要）：如果需要完全重新生成，<code>dotnet watch</code> 会重启应用程序。</li></ul><p>终端中的输出指示文件 <code>Program.cs</code> 已更改，并且更改已热重载到正在运行的应用。</p><p>若要查看更改的结果，请刷新浏览器。 将显示更新后的响应“Hello .NET Developer Community!”。</p><p>通过此自动重新生成和重启过程，可以快速查看更改的结果，而无需手动停止和重启应用程序。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 🔥</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Hot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enabled.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> For</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> supported</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> edits,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> see</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://aka.ms/dotnet/hot-reload.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  💡</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Press</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Ctrl + R&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 🔧</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Building...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  正在确定要还原的项目…</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  所有项目均是最新的，无法还原。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">otnet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ebug</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">et8.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp.dll</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 🚀</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Started</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[14]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> listening</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:5024</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[0]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Application</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> started.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Press</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ctrl+C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shut</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[0]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Hosting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Development</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microsoft.Hosting.Lifetime[0]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Content</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">otnet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWebApp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ⌚</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> File</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changed:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rogram.cs.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 🔥</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Hot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> succeeded.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ⌚</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> File</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changed:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rogram.cs.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ⌚</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply.</span></span></code></pre></div><h2 id="使用中间件自定义-asp-net-core-行为" tabindex="-1">使用中间件自定义 ASP.NET Core 行为 <a class="header-anchor" href="#使用中间件自定义-asp-net-core-行为" aria-label="Permalink to &quot;使用中间件自定义 ASP.NET Core 行为&quot;">​</a></h2><h3 id="终端和非终端中间件" tabindex="-1">终端和非终端中间件 <a class="header-anchor" href="#终端和非终端中间件" aria-label="Permalink to &quot;终端和非终端中间件&quot;">​</a></h3><p>每个中间件都可以视为终端或非终端中间件。 非终端中间件会处理请求，然后调用管道中的下一个中间件。 终端中间件是管道中的最后一个中间件，没有下一个要调用的中间件。</p><p>使用 <code>app.Use()</code> 添加的委托可以是终端或非终端中间件。 这些委托需要一个 <code>HttpContext</code> 对象和一个 <code>RequestDelegate</code> 对象作为参数。 通常情况下，委托包括 <code>await next.Invoke();</code>。 这会将控制权传递给管道上的下一个中间件。 该行之前的代码在下一个中间件之前运行，该行之后的代码在下一个中间件之后运行。 使用 <code>app.Use()</code> 添加的委托在响应发送到客户端之前有两次机会对请求采取行动；一次是在终端中间件生成响应之前，另一次是在终端中间件生成响应之后。</p><p>使用 <code>app.Run()</code> 添加的委托始终是终端中间件。 不会调用管道中的下一个中间件。 是运行的最后一个中间件组件。 只需要 <code>HttpContext</code> 对象作为参数。 <code>app.Run()</code> 是添加终端中间件的快捷方式。</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context.Response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello from middleware 1. Passing to the next middleware!</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Call the next middleware in the pipeline</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> next.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context.Response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello from middleware 1 again!</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context.Response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello from middleware 2!</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="使用内置中间件" tabindex="-1">使用内置中间件 <a class="header-anchor" href="#使用内置中间件" aria-label="Permalink to &quot;使用内置中间件&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/about&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;helloworld.study&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UseRewriter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RewriteOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddRedirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;history&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;about&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><p>此代码添加 URL 重写程序中间件组件，该组件用于将请求从 <code>/history</code> 重定向到 <code>/about</code>。 AddRedirect() 方法采用两个参数：用于匹配请求路径的正则表达式模式，以及要重定向到的替换路径。</p><h4 id="创建自定义中间件" tabindex="-1">创建自定义中间件 <a class="header-anchor" href="#创建自定义中间件" aria-label="Permalink to &quot;创建自定义中间件&quot;">​</a></h4><p>对于每个请求，它应记录请求方法、路径和响应状态代码。 紧接在 <code>app.Run()</code> 之前，插入以下代码：</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$&quot;{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Method</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Response</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">StatusCode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>在上述代码中：</p><p><code>app.Use()</code> 向管道添加一个自定义中间件组件。 该组件采用一个 <code>HttpContext</code> 对象和一个 <code>RequestDelegate</code> 对象作为参数。 <code>delegate</code> 将请求方法、路径和响应状态代码写入到控制台。 <code>await next()</code> 调用管道中的下一个中间件组件。</p><h4 id="更改中间件的顺序" tabindex="-1">更改中间件的顺序 <a class="header-anchor" href="#更改中间件的顺序" aria-label="Permalink to &quot;更改中间件的顺序&quot;">​</a></h4><p>应用似乎正常工作，但存在问题。 你请求了 <code>/history</code> 页，但控制台输出没有显示它。 之所以发生此行为，是因为用于记录请求详细信息的自定义中间件组件是在 URL 重写器中间件之后添加的。 URL 重写器中间件将请求从 <code>/history</code> 重定向到 <code>/about</code> 并发送响应，自定义中间件组件看不到请求。 让我们来解决此问题。</p><p>将你添加的 <code>app.Use()</code> 行移动到 <code>app.UseRewriter()</code> 行的正前方。</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$&quot;{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Method</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Response</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">StatusCode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello .NET Developer Community!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UseRewriter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RewriteOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddRedirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/about&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;helloworld.study&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UseRewriter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RewriteOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddRedirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;history&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;about&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><h4 id="修复状态代码" tabindex="-1">修复状态代码 <a class="header-anchor" href="#修复状态代码" aria-label="Permalink to &quot;修复状态代码&quot;">​</a></h4><p>该应用几乎已准备就绪，但还有一个问题。 控制台输出中的状态代码始终为 <code>200</code>，即使应用重定向了请求也是如此。 <code>/history</code> 请求的状态代码应为 <code>302</code> 重定向。 发生此行为是因为处理中间件组件的顺序存在另一个问题。</p><p>自定义中间件组件将详细信息记录到控制台，然后调用 <code>await next()</code> 来传递给下一个中间件组件。 <code>问题是，StatusCode</code> 对象的 <code>Response</code> 属性是在终端中间件组件启动响应后设置的。 让我们更改代码以修复此问题。</p><p>在你添加的委托中，将 <code>Console.WriteLine()</code> 行移动到 <code>await next()</code> 行之后。</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$&quot;{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Method</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Response</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">StatusCode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="在-asp-net-core-中使用依赖项注入配置服务" tabindex="-1">在 ASP.NET Core 中使用依赖项注入配置服务 <a class="header-anchor" href="#在-asp-net-core-中使用依赖项注入配置服务" aria-label="Permalink to &quot;在 ASP.NET Core 中使用依赖项注入配置服务&quot;">​</a></h2><h3 id="注册和使用服务" tabindex="-1">注册和使用服务 <a class="header-anchor" href="#注册和使用服务" aria-label="Permalink to &quot;注册和使用服务&quot;">​</a></h3><h4 id="创建服务" tabindex="-1">创建服务 <a class="header-anchor" href="#创建服务" aria-label="Permalink to &quot;创建服务&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WelcomeService</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    DateTime</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _currtentTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Guid</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _serviceId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        _serviceCreated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DateTime.Now;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        _serviceId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Guid.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NewGuid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GetWelcomeMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;Welcome to helloworld.study! The current time is {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_serviceCreated</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}. This service instance has an ID of {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_serviceId</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="注册该服务" tabindex="-1">注册该服务 <a class="header-anchor" href="#注册该服务" aria-label="Permalink to &quot;注册该服务&quot;">​</a></h4><ol><li><p>打开 <code>Program.cs</code> 文件。</p></li><li><p>将下面的指令添加到文件的顶部：</p></li></ol><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>此指令解析对 <code>WelcomeService</code> 类的引用。</p><ol start="3"><li>紧接在 <code>var builder = WebApplication.CreateBuilder(args);</code> 行之后，添加以下代码：</li></ol><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">builder.Services.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddSingleton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;();</span></span></code></pre></div><p><code>WebApplication.CreateBuilder</code> 创建名为 <code>WebApplicationBuilder</code> 的 <code>builder</code> 类的新实例。 前面的代码使用单一实例生存期向服务容器注册 <code>WelcomeService</code> 类。</p><ol start="4"><li>将 <code>app.MapGet(&quot;/&quot;, () =&gt; &quot;Hello World!&quot;);</code> 行更改为以下代码：</li></ol><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WelcomeService</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> welcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> welcomeService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetWelcomeMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><p>此代码将 HTTP GET 请求映射到根 URL (<code>/</code>)，指向一个委托，该委托返回由 <code>WelcomeService</code> 服务生成的欢迎消息。</p><p>Program.cs 文件应如下所示：</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebApplication.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CreateBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">builder.Services.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddSingleton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WelcomeService</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> welcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> welcomeService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetWelcomeMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="使用接口注册服务" tabindex="-1">使用接口注册服务 <a class="header-anchor" href="#使用接口注册服务" aria-label="Permalink to &quot;使用接口注册服务&quot;">​</a></h4><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Interfaces</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IWelcomeService</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol><li>更新 <code>WelcomeService</code> 类声明以实现 <code>IWelcomeService</code> 接口：</li></ol><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IWelcomeService</span></span></code></pre></div><ol start="2"><li>打开 Program.cs 文件。将 <code>builder.Services.AddSingleton&lt;WelcomeService&gt;();</code> 行更新为以下代码：</li></ol><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">builder.Services.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddSingleton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IWelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;();</span></span></code></pre></div><ol start="3"><li>将 <code>app.MapGet(&quot;/&quot;, (WelcomeService welcomeService) =&gt; welcomeService.GetWelcomeMessage());</code> 行更新为以下代码：</li></ol><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IWelcomeService</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> welcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> welcomeService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetWelcomeMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><p>匿名函数现在需要 <code>IWelcomeService</code> 而不是 <code>WelcomeService</code>。</p><p>Program.cs 文件应如下所示：</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebApplication.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CreateBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">builder.Services.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddSingleton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WelcomeService</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> welcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> welcomeService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetWelcomeMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="服务生存期" tabindex="-1">服务生存期 <a class="header-anchor" href="#服务生存期" aria-label="Permalink to &quot;服务生存期&quot;">​</a></h3><p>注册服务时，必须选择与在应用中使用服务的方式匹配的生存期。 生存期会影响服务在注入组件时的行为方式。 到目前为止，你已使用 <code>AddSingleton</code> 方法注册了服务。 此方法使用单一实例生存期注册服务。 ASP.NET Core 中的服务有三种内置生存期：</p><ul><li>单一实例</li><li>范围性</li><li>暂时性</li></ul><h4 id="单一实例生存期" tabindex="-1">单一实例生存期 <a class="header-anchor" href="#单一实例生存期" aria-label="Permalink to &quot;单一实例生存期&quot;">​</a></h4><p>使用单一实例生存期注册的服务会在应用启动时创建一次，并在应用的生存期内重复使用。 这种生存期对于创建成本高昂或不会经常更改的服务非常有用。 例如，如果一个服务可以从文件中读取配置设置，则可以注册为单一实例。</p><p>请使用 <code>AddSingleton</code> 方法将单一实例服务添加到服务容器。</p><h4 id="作用域生存期" tabindex="-1">作用域生存期 <a class="header-anchor" href="#作用域生存期" aria-label="Permalink to &quot;作用域生存期&quot;">​</a></h4><p>使用作用域生存期注册的服务会在配置的每个范围内创建一次，ASP.NET Core 会为每个请求设置该范围。 ASP.NET Core 中的作用域服务通常在收到请求时创建，并在请求完成时处理掉。 如果服务需要访问特定于请求的数据，这种生存期会非常有用。 例如，从数据库中提取客户数据的服务可以注册为作用域服务。</p><p>请使用 <code>AddScoped</code> 方法将范围性服务添加到服务容器。</p><h4 id="暂时性生存期" tabindex="-1">暂时性生存期 <a class="header-anchor" href="#暂时性生存期" aria-label="Permalink to &quot;暂时性生存期&quot;">​</a></h4><p>使用暂时性生存期注册的服务会在每次请求时创建。 这种生存期适用于轻型无状态服务。 例如，执行专用计算的服务可以注册为暂时性服务。</p><p>请使用 <code>AddTransient</code> 方法将暂时性服务添加到服务容器。</p><h3 id="探索服务生存期" tabindex="-1">探索服务生存期 <a class="header-anchor" href="#探索服务生存期" aria-label="Permalink to &quot;探索服务生存期&quot;">​</a></h3><h4 id="测试单一实例服务生存期" tabindex="-1">测试单一实例服务生存期 <a class="header-anchor" href="#测试单一实例服务生存期" aria-label="Permalink to &quot;测试单一实例服务生存期&quot;">​</a></h4><ol><li><p>如果之前的练习中已经运行了应用，那么它应当仍在运行。 如果没有如期运行，请按照之前的方式运行应用。</p></li><li><p>刷新浏览器窗口并留意欢迎消息中显示的时间。</p></li><li><p>等待几秒钟，然后再次刷新浏览器窗口。 欢迎消息没有变化。 时间戳和 GUID 保持不变。</p></li></ol><p>欢迎消息中显示的时间和 GUID 没有变化，因为 <code>WelcomeService</code> 服务注册为单一实例服务。 在应用启动时创建一次服务，并在应用的生存期内重复使用。 每个客户端的每个请求都使用相同的服务实例。 不会创建其他服务实例。</p><ol start="4"><li>通过在 Visual Studio Code 中按 Shift+F5 来停止应用。</li></ol><h4 id="测试作用域服务生存期" tabindex="-1">测试作用域服务生存期 <a class="header-anchor" href="#测试作用域服务生存期" aria-label="Permalink to &quot;测试作用域服务生存期&quot;">​</a></h4><p>要了解作用域服务生存期，需要更改注册 <code>WelcomeService</code> 服务的方式。</p><ol><li>在 Program.cs 文件中，更改 <code>WelcomeService</code> 服务的注册以使用作用域服务生存期：</li></ol><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">builder.Services.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddScoped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IWelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;();</span></span></code></pre></div><p>此代码将 <code>WelcomeService</code> 类注册到具有作用域生存期的服务容器。</p><ol start="2"><li><p>请按照之前的方式运行应用。</p></li><li><p>请留意欢迎消息中显示的时间和 GUID。 刷新浏览器窗口并注意每次时间都会变化，GUID 也是不同的。</p></li></ol><p>欢迎消息中显示的数据会变化，因为 <code>WelcomeService</code> 服务现已注册为作用域服务。 每个客户端请求都会单独创建一次服务，请求完成后，该服务就会被释放。 每个客户端的每个请求都使用新的服务实例。</p><ol start="4"><li><p>通过在 Visual Studio Code 中按 Shift+F5 来停止应用。</p></li><li><p>让我们来探讨一下，在同一个请求中尝试使用同一 <code>WelcomeService</code> 服务的两个实例时，作用域服务生存期的行为。 将 <code>app.MapGet()</code> 行更改为以下代码：</p></li></ol><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MapGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IWelcomeService</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> welcomeService1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IWelcomeService</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> welcomeService2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> message1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;Message1: {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">welcomeService1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetWelcomeMessage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> message2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;Message2: {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">welcomeService2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetWelcomeMessage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">message1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">message2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span></code></pre></div><p>在上述代码中：</p><ul><li><code>app.MapGet()</code> 委托现在有两个类型均为 <code>IWelcomeService</code> 的参数。 委托会生成两条欢迎消息，每个服务实例各一条。</li><li>委托在单个响应中返回这两条消息。</li></ul><ol start="6"><li>请按照之前的方式运行应用。 请注意，即使两条欢迎消息是在不同时间生成的，并且它们是作为单独的参数传递给委托的，但消息内容是相同的。</li></ol><p>此行为是因为 <code>WelcomeService</code> 服务注册为作用域服务。 该服务是针对每个客户端请求单独创建的，在同一个请求中，所有需要它的组件都会获得同一个实例。 <code>welcomeService1</code> 和 <code>welcomeService2</code> 都引用 <code>WelcomeService</code> 服务的同一实例。</p><ol start="7"><li><p>多次刷新页面。 请注意，欢迎消息中的时间戳和 GUID 每次都会变化，但两条消息始终相同。</p></li><li><p>通过在 Visual Studio Code 中按 Shift+F5 来停止应用。</p></li></ol><h4 id="测试暂时性服务生存期" tabindex="-1">测试暂时性服务生存期 <a class="header-anchor" href="#测试暂时性服务生存期" aria-label="Permalink to &quot;测试暂时性服务生存期&quot;">​</a></h4><p>现在，让我们检查暂时性服务生存期。</p><ol><li>更改 <code>WelcomeService</code> 服务的注册以使用暂时性服务生存期：</li></ol><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">builder.Services.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddTransient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IWelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WelcomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;();</span></span></code></pre></div><p>此代码将 <code>WelcomeService</code> 类注册到具有暂时性生存期的服务容器。</p><ol start="2"><li>请按照之前的方式运行应用。 这两条消息中的时间保持不变，因为 <code>WelcomeService</code> 服务的两个实例是同时创建的。 但是，每个消息中的 GUID 不同，因为每个服务实例都是唯一的。</li></ol><p>此行为代表暂时性服务生存期。 每次将服务注入组件时，都会创建新的服务实例。 由于它注入到委托中两次，因此会创建两个服务实例。</p><ol start="3"><li><p>多次刷新页面。 每次刷新页面时，两个消息中的时间戳始终相同，但每个消息中的 GUID 不同。</p></li><li><p>通过在 Visual Studio Code 中按 Shift+F5 来停止应用。</p></li></ol><h2 id="发布-asp-net-core-应用" tabindex="-1">发布 ASP.NET Core 应用 <a class="header-anchor" href="#发布-asp-net-core-应用" aria-label="Permalink to &quot;发布 ASP.NET Core 应用&quot;">​</a></h2><h3 id="为依赖于框架的部署进行发布" tabindex="-1">为依赖于框架的部署进行发布 <a class="header-anchor" href="#为依赖于框架的部署进行发布" aria-label="Permalink to &quot;为依赖于框架的部署进行发布&quot;">​</a></h3><p>依赖框架的部署是 ASP.NET Core 应用的默认部署。 发布依赖于框架的应用时，部署包中仅包含应用的文件和依赖项。 不包括 .NET 运行时。 目标计算机必须安装正确的 .NET 运行时版本才能运行应用。</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ dotnet publish</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  正在确定要还原的项目…</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  所有项目均是最新的，无法还原。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">training</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">csproj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]       </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MyWebApp -&gt; D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\dotnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">training\\MyWebApp\\bin\\Release\\net8.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\MyWebApp.dll</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MyWebApp -&gt; D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\dotnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">training\\MyWebApp\\bin\\Release\\net8.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\publish\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ cd .\\bin\\Release\\net8.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ dotnet .\\MyWebApp.dll</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Microsoft.Hosting.Lifetime[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Now listening </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//localhost:5000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Microsoft.Hosting.Lifetime[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Application started. Press Ctrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C to shut down.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Microsoft.Hosting.Lifetime[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Hosting </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Production</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Microsoft.Hosting.Lifetime[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Content root </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\dotnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">training\\MyWebApp\\bin\\Release\\net8.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span></code></pre></div><h3 id="为独立部署进行发布" tabindex="-1">为独立部署进行发布 <a class="header-anchor" href="#为独立部署进行发布" aria-label="Permalink to &quot;为独立部署进行发布&quot;">​</a></h3><p>独立部署包括应用及其依赖项以及 .NET 运行时。 由于应用包含 .NET 运行时，因此目标计算机不需要安装 .NET 运行时才能运行应用。 这使得独立部署大于依赖于框架的部署。 独立应用还必须处理 .NET 运行时更新的部署，以接收最新修补程序。</p><p>运行以下命令，针对 64 位 Windows 将应用发布为独立部署：</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ dotnet publish </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r win</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x64 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">contained</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  正在确定要还原的项目…</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  已还原 </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\dotnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">training\\MyWebApp\\MyWebApp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">csproj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (用时 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 秒)。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">training</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MyWebApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">csproj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]       </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MyWebApp -&gt; D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\dotnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">training\\MyWebApp\\bin\\Release\\net8.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\win</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x64\\MyWebApp.dll</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MyWebApp -&gt; D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\dotnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">training\\MyWebApp\\bin\\Release\\net8.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\win</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x64\\publish\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ cd .\\bin\\Release\\net8.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\win</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x64\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ dotnet .\\MyWebApp.dll</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Microsoft.Hosting.Lifetime[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Now listening </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//localhost:5000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Microsoft.Hosting.Lifetime[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Application started. Press Ctrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C to shut down.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Microsoft.Hosting.Lifetime[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Hosting </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Production</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Microsoft.Hosting.Lifetime[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Content root </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\dotnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">training\\MyWebApp\\bin\\Release\\net8.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\win</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x64</span></span></code></pre></div>`,157)]))}const g=i(t,[["render",l]]);export{F as __pageData,g as default};
