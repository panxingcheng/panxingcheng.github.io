import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.BPIbAgMo.js";const g=JSON.parse('{"title":"Kubernetes","description":"","frontmatter":{"title":"Kubernetes","permalink":"1634692106.html","sidebar":"auto","blogs":"Linux","date":"2021-10-20"},"headers":[],"relativePath":"category/linux/Kubernetes.md","filePath":"category/linux/Kubernetes.md","lastUpdated":1714213745000}'),e={name:"category/linux/Kubernetes.md"};function h(l,s,k,p,r,F){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="kubernetes" tabindex="-1">Kubernetes <a class="header-anchor" href="#kubernetes" aria-label="Permalink to &quot;Kubernetes&quot;">​</a></h1><h2 id="配置-kubernetes-集群" tabindex="-1">配置 Kubernetes 集群 <a class="header-anchor" href="#配置-kubernetes-集群" aria-label="Permalink to &quot;配置 Kubernetes 集群&quot;">​</a></h2><h3 id="用-minikube-运行一个本地单节点-kubernetes-集群" tabindex="-1">用 Minikube 运行一个本地单节点 Kubernetes 集群 <a class="header-anchor" href="#用-minikube-运行一个本地单节点-kubernetes-集群" aria-label="Permalink to &quot;用 Minikube 运行一个本地单节点 Kubernetes 集群&quot;">​</a></h3><p>使用 Minikube 是运行 Kubernetes 集群最简单、最快捷的途径。Minikube 是一个构建单节点集群的工具，对于测试 Kubernetes 和本地开发应用都非常有用。</p><p>前置条件：</p><ul><li>2 核 CPU 或更多</li><li>2GB 内存或更多</li><li>20GB 磁盘空间或更多</li><li>能上网</li><li>容器或虚拟机管理器，如：<a href="https://minikube.sigs.k8s.io/docs/drivers/docker/" target="_blank" rel="noreferrer">Docker</a></li></ul><ol><li><p>安装 Minikube</p><p>要在 x86-64 Linux 上使用二进制下载安装最新的 Minikube 稳定版：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -LO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minikube-linux-amd64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/minikube</span></span></code></pre></div></li><li><p>使用 Minikue 启动一个 Kubernetes 集群</p><p>当你在本地安装了 Minikube 之后，可以立即使用下面的命令启动 Kubernetes 集群：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minikube v1.24.0 on Ubuntu 20.04 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amd64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Automatically selected the docker driver. Other choices: none, ssh</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Using image repository registry.cn-hangzhou.aliyuncs.com/google_containers</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Starting control plane node minikube in cluster minikube</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pulling base image ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> registry.cn-hangzhou.aliyun...:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 355.77</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 355.78</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  100.00%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5.39</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Creating docker container (CPUs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Memory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2200MB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kubeadm.sha256:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> B</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> B</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--------------------------] 100.00% </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p/s 0s</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kubectl:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 38.42</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 44.73</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-----------&gt;_] 85.88% 2.70 MiB p/s ETA 2s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kubelet:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 45.67</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 115.57</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [----&gt;______] 39.52% 2.75 MiB p/s ETA 25s/    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kubelet: 115.57 MiB / 115.57 MiB [-------------] 100.00% 4.03 MiB p/s 29</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Generating</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> certificates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> keys</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Booting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> control</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plane</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Configuring</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RBAC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rules</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Verifying Kubernetes components...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry.cn-hangzhou.aliyuncs.com/google_containers/storage-provisioner:v5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Enabled addons: default-storageclass, storage-provisioner</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">minikube start 遇到的一些问题</p><ul><li><p>Requested cpu count 2 is greater than the available cpus of 1</p><p>在单核 CPU 主机上可能会遇到下面这样的错误：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minikube v1.23.2 on Ubuntu 20.04 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amd64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Automatically selected the docker driver. Other choices: none, ssh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Exiting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> due</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RSRC_INSUFFICIENT_CORES:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Requested</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cpu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> greater</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> than</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> available</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cpus</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><p>解决方案：使用 <code>--force</code> 和 <code>--cpus=1</code> 选项来强制使用指定的 CPU 数量：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cpus=1</span></span></code></pre></div></li><li><p>This container is having trouble accessing <a href="https://k8s.gcr.io" target="_blank" rel="noreferrer">https://k8s.gcr.io</a></p><p>由于众所周知的原因，国内无法访问某些资源：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Starting control plane node minikube in cluster minikube</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pulling base image ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Updating the running docker </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minikube&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> container ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> container</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> having</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> trouble</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> accessing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://k8s.gcr.io</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> To pull new external images, you may need to configure a proxy: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span></code></pre></div><p>解决方案：使用 <code>--image-mirror-country=cn</code> 选项来使用国内镜像资源：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --image-mirror-country=cn</span></span></code></pre></div><p>如果之前已经使用过 <code>minikube start</code> 命令，建议先 <code>minikube delete</code>。</p></li></ul></div></li></ol><h3 id="安装-kubernetes-客户端-kubectl" tabindex="-1">安装 Kubernetes 客户端（kubectl） <a class="header-anchor" href="#安装-kubernetes-客户端-kubectl" aria-label="Permalink to &quot;安装 Kubernetes 客户端（kubectl）&quot;">​</a></h3><p>要与 Kubernetes 进行交互，还需要 kubectl CLI 客户端。</p><h4 id="用-curl-在-linux-系统中安装-kubectl" tabindex="-1">用 curl 在 Linux 系统中安装 kubectl <a class="header-anchor" href="#用-curl-在-linux-系统中安装-kubectl" aria-label="Permalink to &quot;用 curl 在 Linux 系统中安装 kubectl&quot;">​</a></h4><ol><li><p>用以下命令下载最新发行版：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -LO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://dl.k8s.io/release/$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl&quot;</span></span></code></pre></div></li><li><p>安装 kubectl：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0755</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/kubectl</span></span></code></pre></div></li><li><p>执行测试，以保障你安装的版本是最新的：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --client</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Client</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Version:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version.Info{Major:&quot;1&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Minor:&quot;22&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GitVersion:&quot;v1.22.3&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GitCommit:&quot;c92036820499fedefec0f847e2054d824aea6cd1&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GitTreeState:&quot;clean&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BuildDate:&quot;2021-10-27T18:41:28Z&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GoVersion:&quot;go1.16.9&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler:&quot;gc&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Platform:&quot;linux/amd64&quot;}</span></span></code></pre></div></li><li><p>使用 kubectl 查看集群是否正常工作</p><p>要验证集群是否正常工作，可以使用以下所示的 <code>kubectl cluster-info</code> 命令。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cluster-info</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Kubernetes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> control</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plane</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> running</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://192.168.49.2:8443</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CoreDNS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> running</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://192.168.49.2:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">To</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> further</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> diagnose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cluster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> problems,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;kubectl cluster-info dump&#39;.</span></span></code></pre></div><p>这里显示集群已经启动。它显示了各种 Kubernetes 组件的 URL，包括 API 服务器和 Web 控制台。</p></li></ol><h4 id="kubectl-的可选配置和插件" tabindex="-1">kubectl 的可选配置和插件 <a class="header-anchor" href="#kubectl-的可选配置和插件" aria-label="Permalink to &quot;kubectl 的可选配置和插件&quot;">​</a></h4><h4 id="启用-shell-自动补全功能" tabindex="-1">启用 shell 自动补全功能 <a class="header-anchor" href="#启用-shell-自动补全功能" aria-label="Permalink to &quot;启用 shell 自动补全功能&quot;">​</a></h4><p>kubectl 的 Bash 补全脚本可以用命令 <code>kubectl completion bash</code> 生成。在 shell 中导入（Sourcing）补全脚本，将启用 kubectl 自动补全功能。</p><p>然而，补全脚本依赖于工具 bash-completion，所以要先安装它（可以用命令 <code>type _init_completion</code> 检查 bash-completion 是否已安装）。</p><ul><li><p>安装 bash-completion</p><p>很多包管理工具均支持 bash-completion。可以通过 <code>apt install bash-completion</code> 或 <code>yum install bash-completion</code> 等命令来安装它。</p><p>上述命令将创建文件 <em>/usr/share/bash-completion/bash_completion</em>，它是 bash-completion 的主脚本。依据包管理工具的实际情况，你需要在 <em>~/.bashrc</em> 文件中手工导入此文件。</p><p>要查看结果，请重新加载你的 shell，并运行命令 <code>type _init_completion</code>。 如果命令执行成功，则设置完成，否则将下面内容添加到文件 <em>~/.bashrc</em> 中：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/bash-completion/bash_completion</span></span></code></pre></div><p>重新加载 shell，再输入命令 <code>type _init_completion</code> 来验证 bash-completion 的安装状态。</p></li><li><p>启动 kubectl 自动补全功能</p><p>你现在需要确保一点：kubectl 补全脚本已经导入（sourced）到 shell 会话中。 这里有两种验证方法：</p><ul><li><p>在文件 <em>~/.bashrc</em> 中导入（source）补全脚本：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;source &lt;(kubectl completion bash)&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">~/.bashrc</span></span></code></pre></div></li><li><p>将补全脚本添加到目录 <em>/etc/bash_completion.d</em> 中：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/bash_completion.d/kubectl</span></span></code></pre></div></li></ul></li></ul>`,16)]))}const o=i(e,[["render",h]]);export{g as __pageData,o as default};
