import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.BPIbAgMo.js";const r=JSON.parse('{"title":"使用原生 JS 解决 uni-app 中的 uni.chooseVideo 在手机上无法准确获取到上传视频时长的问题","description":"","frontmatter":{"title":"使用原生 JS 解决 uni-app 中的 uni.chooseVideo 在手机上无法准确获取到上传视频时长的问题","permalink":"1590387317.html","sidebar":"auto","blogs":"JavaScript","date":"2020-05-25"},"headers":[],"relativePath":"category/js/使用原生 JS 解决 uni-app 中的 uni.chooseVideo 在手机上无法准确获取到上传视频时长的问题.md","filePath":"category/js/使用原生 JS 解决 uni-app 中的 uni.chooseVideo 在手机上无法准确获取到上传视频时长的问题.md","lastUpdated":1714213745000}'),t={name:"category/js/使用原生 JS 解决 uni-app 中的 uni.chooseVideo 在手机上无法准确获取到上传视频时长的问题.md"};function p(h,s,l,k,d,o){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="使用原生-js-解决-uni-app-中的-uni-choosevideo-在手机上无法准确获取到上传视频时长的问题" tabindex="-1">使用原生 JS 解决 uni-app 中的 uni.chooseVideo 在手机上无法准确获取到上传视频时长的问题 <a class="header-anchor" href="#使用原生-js-解决-uni-app-中的-uni-choosevideo-在手机上无法准确获取到上传视频时长的问题" aria-label="Permalink to &quot;使用原生 JS 解决 uni-app 中的 uni.chooseVideo 在手机上无法准确获取到上传视频时长的问题&quot;">​</a></h1><blockquote><p>uni.chooseVideo(OBJECT) 中的 success 会返回一个 <code>duration</code> 来表示选定视频的时间长度，单位为 s。</p></blockquote><p>在 PC 端浏览器（Chromium 内核）中是可以准确获取到视频时长的。</p><p>可是在手机端浏览器，特别是微信里的浏览器中是有问题的：首次获取到视频长度为 0，再试的话视频长度会比实际长度少个 5 到 6 秒。</p><p>下面是自己尝试后的解决方案：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// uni.chooseVideo 中的 success 会返回一个视频的临时文件对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> videoFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.tempFile;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 得到 File 的对象 URL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> videoURL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createObjectURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(videoFile);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 临时创建一个 Video</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> videoElement </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置 Video 的 URL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">videoElement.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, videoURL);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监听 Video 的 loadedmetadata 事件，这个事件发生后才能获取到视频的时长</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">videoElement.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;loadedmetadata&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> duration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> videoElement.duration;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;视频的时长是：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> duration);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// 其他代码……</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>这个解决方案同样适用于音频，只需要把 <code>document.createElement(&quot;video&quot;);</code> 中的 <code>video</code> 换成 <code>audio</code> 就行（其实不换也行，两者的属性是一样的，只是表现不同）。</p>`,7)]))}const c=i(t,[["render",p]]);export{r as __pageData,c as default};
